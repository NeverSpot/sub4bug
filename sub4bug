#!/bin/bash

# Define variables
domain=$1
bug_dir=~/bug/$domain
subfinder_subfix=_subfinder
haktrails_subfix=_haktrails
assetfinder_sufix=_assetfinder
subfinder_file="$bug_dir/$domain$subfinder_subfix"
haktrails_file="$bug_dir/$domain$haktrails_subfix"
assetfinder_file="$bug_dir/$domain$assetfinder_sufix"
final_file="$bug_dir/"$domain"_final"
sorted_file="$bug_dir/"$domain"_final_sorted"
working_file="$bug_dir/final"

# Define functions
function run_subfinder {
    subfinder -d $domain -t 100 > $subfinder_file &
    subfinder_pid=$!
    wait $subfinder_pid
}

function run_haktrails {
    echo $domain | haktrails subdomains -t 100 > $haktrails_file &
    haktrails_pid=$!
    wait $haktrails_pid
}

function run_assetfinder {
    assetfinder $domain > $assetfinder_file &
    assetfinder_pid=$!
    wait $assetfinder_pid
}

function merge_subdomains {
    cat $subfinder_file $assetfinder_file $haktrails_file > $final_file &
    cat_pid=$!
    wait $cat_pid
}

function filter_duplicates {
    sort -u $final_file > $sorted_file &
    sort_pid=$!
    wait $sort_pid
}

function test_subdomains {
    httpx-pd -l $sorted_file -o $working_file -threads 200 -status-code -follow-redirects &
    httpx_pid=$!
    wait $httpx_pid
}

# Check for input parameter
if [[ ! -n $domain ]]; then 
    echo "No domain parameter passed."
    exit 1
fi

# Create bug directory
mkdir $bug_dir

# Run tools in parallel
run_subfinder &
run_haktrails &
run_assetfinder &
wait

# Merge, filter, and test subdomains
merge_subdomains
filter_duplicates
test_subdomains

# Clean up intermediate files
trap "rm -f $subfinder_file $haktrails_file $assetfinder_file $final_file $sorted_file" EXIT
